// Copyright 2018-2020 Origo Foundation.
// This file is part of Origo Network.

// Origo Network is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Origo Network is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Origo Network.  If not, see <http://www.gnu.org/licenses/>.

//! Spec seal deserialization.

use hash::*;
use uint::Uint;
use bytes::Bytes;

/// Origo seal.
#[derive(Debug, PartialEq, Deserialize)]
#[serde(deny_unknown_fields)]
#[serde(rename_all = "camelCase")]
pub struct OrigoSeal {
	/// Seal nonce.
	pub nonce: H256,
	/// Seal solution.
	pub solution: Bytes,
}

/// AuthorityRound seal.
#[derive(Debug, PartialEq, Deserialize)]
#[serde(deny_unknown_fields)]
pub struct AuthorityRoundSeal {
	/// Seal step.
	pub step: Uint,
	/// Seal signature.
	pub signature: H520,
}

/// Tendermint seal.
#[derive(Debug, PartialEq, Deserialize)]
#[serde(deny_unknown_fields)]
pub struct TendermintSeal {
	/// Seal round.
	pub round: Uint,
	/// Proposal seal signature.
	pub proposal: H520,
	/// Proposal seal signature.
	pub precommits: Vec<H520>,
}

/// Seal variants.
#[derive(Debug, PartialEq, Deserialize)]
#[serde(deny_unknown_fields)]
#[serde(rename_all = "camelCase")]
pub enum Seal {
	/// Origo seal.
	Origo(OrigoSeal),
	/// AuthorityRound seal.
	AuthorityRound(AuthorityRoundSeal),
	/// Tendermint seal.
	Tendermint(TendermintSeal),
	/// Generic seal.
	Generic(Bytes),
}

#[cfg(test)]
mod tests {
	use serde_json;
	use hash::*;
	use bytes::Bytes;
	use uint::Uint;
	use ethereum_types::{U256, H64 as Eth64, H256 as Eth256, H520 as Eth520};
	use spec::{OrigoSeal, AuthorityRoundSeal, TendermintSeal, Seal};
	use std::str::FromStr;

	#[test]
	fn seal_deserialization() {
		let s = r#"[{
			"origo": {
				"nonce": "0x0000000000000000000000000000000000000000000000000000000000000042",
				"solution": "0x000d7e4f738a7700be67b0047b0e8a6159469272ba359155b858e8ff995531c6344c7adebef075de77e80c9c55879b1be309668dd70e203cd7128794f5ef455f1616c4edec4ae1903ffb9b857ca24b067d798bf3029647b6392b5f0d6039189a99f902a7369dfa3c0908970f3071098761849672dd6d4bce161f1d95604a224384168bec3fd5660e02f0fca437f638ccb5506c39622abfa0d8b25ba479657577f3722a245d1a4d94005b1329aaeacd8bf7b411e9c3978f069e077e17530399022155cad281c5dd30c3761ad3b2781157999909e2ae7c393aaa7bfedc038e087ba0596a509f141c35761f22c6b9dabdfd2158672fc8c9b682db17ea35083bbfbc78c7c4034ceb934d6fd1ef7de5ec563e36710287ae6eddbf0fa13c979dae6c21171e679df46b0c9dcc848b4a3b93526ed436d54ee4d1e5273822f33148bafff7ed1843814f05556ce0e1eae2c7dace92008647cdeca66a7dd0b950289f5222f960ed12ca232a6f3baeffef9473d4a266ac08e707e1d14696b09005fea0ac0609a5390178dc02dee6e0c717355ac6df4ea70f378d33c6c5cf7036f826692a2df9b99363ed06eee5c91c93bd4dc17100e2781580f6e9c4bab9f32a3c078f8ae01d51cf6de4ea3e7e1731a70b99faf8326a0c4cc29ec13161c23ae2a0edf643bdc81e19ba33f677531cfa30a3f371c69c7ffa8f39b823fa11db04557ccaaadf31d5233b738ed6b5874532563f33351dbcbd32be53c74189c014553cf509c30dbffecfab0ff9938ade097f37a75692133cb6cb2a0d789e7be81488333d3372f8819ac5a29dacdf9ea65927b8dab5062910c10393a4539ab5a21f2adf92889b83eb082b07ffe861f29f0d3744e5298adc69309b41c5bf180717c1d96dfcf94339fad491c2f1fb25c88b2b96553742f45f9203134a27757de4db8bec5b49bd9754429e0018c716c0a8ac11deee40d3287237c535c5cf91b5029ec1689515901f48cdc0c8054d8c0e7bdf5b4a4a378bd496909cd243638a65d4854ae419e457d18eee62bb772b117930dfd0670afd035e0f97731b1ea01101bd92da13904ab8eb55d0bac3cf02fcb5ad74eb49063ab2e93cd0f7fb4b651b27ae6cee832b9419dd903757240ef8e9f6276ec01610d7ced8dae5d1fc902c544c8ecde35947c4e5d2789600e8be5eb2015d8487036ff1f9c149f6c1c7d4c1adaa5db704ef8511619715962f9f4adc6017ac80e5c94571a53f95acbfe58d1394334a06917cc2ddffd31db8ced9ebc97bffbb2f2a181cfa877be5d1fb299377c5736d8d6771fbc8f6075851ce8a4a93cd47a4a251649f365a682ddaecd62521251bee2f2b33d649c33d957238b941111c62410f7fec5e7f0cd68709fd23048ab287399053fe6c6088aa8e0a63b5f549b825baa8a2d59522b9019b2c16017d74548ba447cb698f7205e7b70684ec49f441e91422db655a736f9bc6081512f6e13ad98378dd2924055ae4c045a727af59ad50564594cbf15b363824083f4bd2b1d21d1809ad7277d65e780b8303b7f9567f0300eee18bfaae6bebd6211b710d449d82d60c29ec1c41b976020b18e25db30412497684014621ed2cfe13d081d50a14b7659e7a013f4c3029230788bd3aca483c7cd82854a18994f9f4a9ab61da7e2b395585fd0356fa03d40290921aedb5428c4180655129b7cc771b1f75291efb755be7bf15722d4dc5c649849fc8b7210489b9d36e4bff8c207570373aa809a32dd310114f00e7f6c3eee11fcb4126484ee41d51cb4d5071e70b99bc0053c9722c9761629121da937784d07cf1912dcc65fac82dbe0ff056b5b30b676fdb1af89eb3e5134960b541d9acedb64096730d40eacf210ebd75ea27d72f9ebc37bacdefc6f8090ff40bf61ecbd503cb"
			}
		},{
			"generic": "0xe011bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa"
		},{
			"authorityRound": {
				"step": "0x0",
				"signature": "0x2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
			}
		},{
			"tendermint": {
				"round": "0x3",
				"proposal": "0x3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
				"precommits": [
					"0x4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004"
				]
			}
		}]"#;

		let deserialized: Vec<Seal> = serde_json::from_str(s).unwrap();
		assert_eq!(deserialized.len(), 4);

		// [0]
		assert_eq!(deserialized[0], Seal::Origo(OrigoSeal {
			nonce: H256(Eth256::from("0x0000000000000000000000000000000000000000000000000000000000000042")),
			solution: Bytes::from_str("0x000d7e4f738a7700be67b0047b0e8a6159469272ba359155b858e8ff995531c6344c7adebef075de77e80c9c55879b1be309668dd70e203cd7128794f5ef455f1616c4edec4ae1903ffb9b857ca24b067d798bf3029647b6392b5f0d6039189a99f902a7369dfa3c0908970f3071098761849672dd6d4bce161f1d95604a224384168bec3fd5660e02f0fca437f638ccb5506c39622abfa0d8b25ba479657577f3722a245d1a4d94005b1329aaeacd8bf7b411e9c3978f069e077e17530399022155cad281c5dd30c3761ad3b2781157999909e2ae7c393aaa7bfedc038e087ba0596a509f141c35761f22c6b9dabdfd2158672fc8c9b682db17ea35083bbfbc78c7c4034ceb934d6fd1ef7de5ec563e36710287ae6eddbf0fa13c979dae6c21171e679df46b0c9dcc848b4a3b93526ed436d54ee4d1e5273822f33148bafff7ed1843814f05556ce0e1eae2c7dace92008647cdeca66a7dd0b950289f5222f960ed12ca232a6f3baeffef9473d4a266ac08e707e1d14696b09005fea0ac0609a5390178dc02dee6e0c717355ac6df4ea70f378d33c6c5cf7036f826692a2df9b99363ed06eee5c91c93bd4dc17100e2781580f6e9c4bab9f32a3c078f8ae01d51cf6de4ea3e7e1731a70b99faf8326a0c4cc29ec13161c23ae2a0edf643bdc81e19ba33f677531cfa30a3f371c69c7ffa8f39b823fa11db04557ccaaadf31d5233b738ed6b5874532563f33351dbcbd32be53c74189c014553cf509c30dbffecfab0ff9938ade097f37a75692133cb6cb2a0d789e7be81488333d3372f8819ac5a29dacdf9ea65927b8dab5062910c10393a4539ab5a21f2adf92889b83eb082b07ffe861f29f0d3744e5298adc69309b41c5bf180717c1d96dfcf94339fad491c2f1fb25c88b2b96553742f45f9203134a27757de4db8bec5b49bd9754429e0018c716c0a8ac11deee40d3287237c535c5cf91b5029ec1689515901f48cdc0c8054d8c0e7bdf5b4a4a378bd496909cd243638a65d4854ae419e457d18eee62bb772b117930dfd0670afd035e0f97731b1ea01101bd92da13904ab8eb55d0bac3cf02fcb5ad74eb49063ab2e93cd0f7fb4b651b27ae6cee832b9419dd903757240ef8e9f6276ec01610d7ced8dae5d1fc902c544c8ecde35947c4e5d2789600e8be5eb2015d8487036ff1f9c149f6c1c7d4c1adaa5db704ef8511619715962f9f4adc6017ac80e5c94571a53f95acbfe58d1394334a06917cc2ddffd31db8ced9ebc97bffbb2f2a181cfa877be5d1fb299377c5736d8d6771fbc8f6075851ce8a4a93cd47a4a251649f365a682ddaecd62521251bee2f2b33d649c33d957238b941111c62410f7fec5e7f0cd68709fd23048ab287399053fe6c6088aa8e0a63b5f549b825baa8a2d59522b9019b2c16017d74548ba447cb698f7205e7b70684ec49f441e91422db655a736f9bc6081512f6e13ad98378dd2924055ae4c045a727af59ad50564594cbf15b363824083f4bd2b1d21d1809ad7277d65e780b8303b7f9567f0300eee18bfaae6bebd6211b710d449d82d60c29ec1c41b976020b18e25db30412497684014621ed2cfe13d081d50a14b7659e7a013f4c3029230788bd3aca483c7cd82854a18994f9f4a9ab61da7e2b395585fd0356fa03d40290921aedb5428c4180655129b7cc771b1f75291efb755be7bf15722d4dc5c649849fc8b7210489b9d36e4bff8c207570373aa809a32dd310114f00e7f6c3eee11fcb4126484ee41d51cb4d5071e70b99bc0053c9722c9761629121da937784d07cf1912dcc65fac82dbe0ff056b5b30b676fdb1af89eb3e5134960b541d9acedb64096730d40eacf210ebd75ea27d72f9ebc37bacdefc6f8090ff40bf61ecbd503cb").unwrap()
		}));

		// [1]
		assert_eq!(deserialized[1], Seal::Generic(Bytes::new(vec![
			0xe0, 0x11, 0xbb, 0xe8, 0xdb, 0x4e, 0x34, 0x7b, 0x4e, 0x8c, 0x93, 0x7c, 0x1c, 0x83, 0x70, 0xe4,
			0xb5, 0xed, 0x33, 0xad, 0xb3, 0xdb, 0x69, 0xcb, 0xdb, 0x7a, 0x38, 0xe1, 0xe5, 0x0b, 0x1b, 0x82, 0xfa])));

		// [2]
		assert_eq!(deserialized[2], Seal::AuthorityRound(AuthorityRoundSeal {
			step: Uint(U256::from(0x0)),
			signature: H520(Eth520::from("0x2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"))
		}));

		// [3]
		assert_eq!(deserialized[3], Seal::Tendermint(TendermintSeal {
			round: Uint(U256::from(0x3)),
			proposal: H520(Eth520::from("0x3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003")),
			precommits: vec![H520(Eth520::from("0x4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004"))]
		}));
	}
}
